# Name of our build, the GitVersion variable will be replaced during one of the steps
name: $(Build.DefinitionName)_$(GitVersion_InformationalVersion)

# Determines which branch(es) will cause a CI build to be started
trigger:
- moduleBuilder

# Stages precede strategy, in other words each stage can contain a strategy (or multiple or none)
# Full run-cycle described here: https://docs.microsoft.com/en-us/azure/devops/pipelines/process/runs?view=azure-devops
stages:
- stage: Prepare
  jobs:
  - job:
    pool:
      vmImage: 'ubuntu-16.04'
    steps:
    - powershell: |
        "OS = $($env:AGENT_OS)" | Out-Host
      displayName: 'Dummy Prepare Step'

- stage: Build
  jobs:
  - job:
    pool:
      vmImage: 'windows-2019'
    steps:
    - powershell: |
        "OS = $($env:AGENT_OS)" | Out-Host
      displayName: 'Dummy Build Step'

- stage: Test
  jobs:
  - job:
    strategy:
      matrix:
        Linux:
          imageName: 'ubuntu-16.04'
        Mac:
          imageName: 'macOS-10.14'
        Windows:
          imageName: 'windows-2019'
        Code Coverage:
          imageName: 'windows-2019'
        Script Analysis:
          imageName: 'windows-2019'
    pool:
      vmImage: $(imageName)
    steps:
    - powershell: |
        "OS = $($env:AGENT_OS)" | Out-Host
      displayName: 'Dummy Test Step'

- stage: Document
  jobs:
  - job:
    pool:
      vmImage: 'windows-2019'
    steps:
    - powershell: |
        "OS = $($env:AGENT_OS)" | Out-Host
      displayName: 'Dummy Document Step'

- stage: Release
  jobs:
  - job:
    pool:
      vmImage: 'windows-2019'
    steps:
    - powershell: |
        "OS = $($env:AGENT_OS)" | Out-Host
      displayName: 'Dummy Release Step'